<?xml version="1.0"?>
<ruleset name="Custom ruleset"
         xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0
         http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
    <description>
        This ruleset checks my code for bad stuff.
    </description>

    <exclude-pattern>.*/test/.*</exclude-pattern>
    <exclude-pattern>.*/model/.*</exclude-pattern>
    <exclude-pattern>.*/roman/.*</exclude-pattern>
    <rule ref="rulesets/java/basic.xml">
        <priority>
            5
        </priority>
    </rule>
    <rule ref="rulesets/java/braces.xml">
        <priority>
            5
        </priority>
    </rule>
    <rule ref="rulesets/java/clone.xml">
        <priority>
            5
        </priority>
    </rule>
    <rule ref="rulesets/java/codesize.xml">
        <priority>
            5
        </priority>
    </rule>
    <!--<rule ref="rulesets/java/design.xml">-->
        <!--<priority>-->
            <!--5-->
        <!--</priority>-->
    <!--</rule>-->
    <rule ref="rulesets/java/empty.xml">
        <priority>
            5
        </priority>
    </rule>
    <rule ref="rulesets/java/finalizers.xml">
        <priority>
            5
        </priority>
    </rule>
    <rule ref="rulesets/java/imports.xml">
        <priority>
            5
        </priority>
    </rule>
    <rule ref="rulesets/java/j2ee.xml">
        <priority>
            5
        </priority>
    </rule>
    <rule ref="rulesets/java/javabeans.xml">
        <priority>
            5
        </priority>
    </rule>
    <rule ref="rulesets/java/junit.xml">
        <priority>
            5
        </priority>
    </rule>
    <rule ref="rulesets/java/logging-java.xml">
        <priority>
            5
        </priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml">
        <priority>
            5
        </priority>
    </rule>
    <rule ref="rulesets/java/naming.xml">
        <priority>
            5
        </priority>
    </rule>
    <rule ref="rulesets/java/optimizations.xml">
        <priority>
            5
        </priority>
    </rule>
    <rule ref="rulesets/java/strictexception.xml">
        <priority>
            5
        </priority>
    </rule>
    <rule ref="rulesets/java/strings.xml">
        <priority>
            5
        </priority>
    </rule>
    <rule ref="rulesets/java/sunsecure.xml">
        <priority>
            5
        </priority>
    </rule>
    <rule ref="rulesets/java/typeresolution.xml">
        <priority>
            5
        </priority>
    </rule>
    <rule ref="rulesets/java/unnecessary.xml">
        <priority>
            5
        </priority>
    </rule>
    <rule ref="rulesets/java/unusedcode.xml">
        <priority>
            5
        </priority>
    </rule>

    <!--rulesets/java/design.xml-->
    <rule ref="category/java/design.xml/AbstractClassWithoutAnyMethod" />
    <rule ref="category/java/design.xml/AvoidCatchingGenericException" />
    <rule ref="category/java/design.xml/AvoidRethrowingException" />
    <rule ref="category/java/design.xml/AvoidRethrowingException" />
    <rule ref="category/java/design.xml/AvoidThrowingNewInstanceOfSameException" />
    <rule ref="category/java/design.xml/AvoidThrowingNullPointerException" />
    <rule ref="category/java/design.xml/AvoidThrowingRawExceptionTypes" />
    <rule ref="category/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal" />
    <rule ref="category/java/design.xml/CollapsibleIfStatements" />
    <rule ref="category/java/design.xml/CouplingBetweenObjects" />
    <rule ref="category/java/design.xml/CyclomaticComplexity" />
    <rule ref="category/java/design.xml/DoNotExtendJavaLangError" />
    <!--<rule ref="category/java/design.xml/DataClass" /> need to be investigated what is this-->
    <rule ref="category/java/design.xml/ExceptionAsFlowControl" />
    <rule ref="category/java/design.xml/ExcessiveClassLength" />
    <rule ref="category/java/design.xml/ExcessiveImports" />
    <rule ref="category/java/design.xml/ExcessiveMethodLength" />
    <rule ref="category/java/design.xml/ExcessiveParameterList" />
    <rule ref="category/java/design.xml/ExcessivePublicCount" />
    <rule ref="category/java/design.xml/FinalFieldCouldBeStatic" />
    <rule ref="category/java/design.xml/GodClass" />
    <rule ref="category/java/design.xml/ImmutableField" />
    <rule ref="category/java/design.xml/LawOfDemeter" />
    <rule ref="category/java/design.xml/LogicInversion" />
    <rule ref="category/java/design.xml/LoosePackageCoupling" />
    <rule ref="category/java/design.xml/NcssConstructorCount" />
    <rule ref="category/java/design.xml/NcssCount" />
    <rule ref="category/java/design.xml/NcssMethodCount" />
    <rule ref="category/java/design.xml/NcssTypeCount" />
    <rule ref="category/java/design.xml/NPathComplexity" />
    <rule ref="category/java/design.xml/SignatureDeclareThrowsException" />
    <rule ref="category/java/design.xml/SimplifiedTernary" />
    <rule ref="category/java/design.xml/SimplifyBooleanAssertion" />
    <rule ref="category/java/design.xml/SimplifyBooleanExpressions" />
    <rule ref="category/java/design.xml/SimplifyBooleanReturns" />
    <rule ref="category/java/design.xml/SimplifyConditional" />
    <rule ref="category/java/design.xml/SingularField" />
    <rule ref="category/java/design.xml/StdCyclomaticComplexity" />
    <rule ref="category/java/design.xml/SwitchDensity" />
    <rule ref="category/java/design.xml/TooManyFields" />
    <rule ref="category/java/design.xml/TooManyMethods" />
    <rule ref="category/java/design.xml/UselessOverridingMethod" />
    <rule ref="category/java/design.xml/UseObjectForClearerAPI" />
    <rule ref="category/java/design.xml/UseUtilityClass" />

</ruleset>